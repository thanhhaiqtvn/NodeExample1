version: 0.2
phases:
  install:
    commands:
      # Environment variables
      - AWS_DEFAULT_REGION=us-east-2
      - AWS_CLUSTER_NAME=cicd-node-sample
      - AWS_ACCOUNT_ID=167693783846
      - IMAGE_REPO_NAME=cicd-node-sample
      - IMAGE_TAG=latest
      - REPOSITORY_URI=167693783846.dkr.ecr.us-east-2.amazonaws.com/cicd-node-sample
      - EKS_KUBECTL_ROLE_ARN=arn:aws:iam::167693783846:role/service-role/codebuild-cicd-sample-service-role

      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3.us-east-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://amazon-eks.s3.us-east-2.amazonaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
  pre_build:
      commands:
        - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$IMAGE_TAG"'@' eks_cicd/deployment.yaml
        - $(aws ecr get-login --no-include-email)
        - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - docker build --tag $REPOSITORY_URI:$IMAGE_TAG .

  post_build:
    commands:
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name $AWS_CLUSTER_NAME
      - kubectl apply -f eks_cicd/deployment.yaml
      - printf '[{"name":"eks-deployment","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > build.json
artifacts:
  files: build.json